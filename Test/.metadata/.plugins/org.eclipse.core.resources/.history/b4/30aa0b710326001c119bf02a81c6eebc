import java.util.LinkedList;
import java.util.NoSuchElementException;


public class HashtableMap {
	int KL_size=0;
	LinkedList<Pair> [] key_list;
	
	public HashtableMap()
	{
		this.KL_size=20;
		this.key_list=new LinkedList[this.KL_size];
	}
	
	public void twice() {
		System.out.println("Comming Soon");
		int t_index=0;
		
		
		int temp_size=this.KL_size*2;
		LinkedList<Pair> [] tmp_key_list= new LinkedList[temp_size];;
		
		
		for (int i=0; i<this.KL_size;i++)
		{
			if (this.key_list[i] != null)
			{
				for(int j=0; j<this.key_list[i].size();j++)
				{
					Pair t_data = new Pair(0,0);
					t_data.put_key(this.key_list[i].get(j).key());
					t_data.put_value(this.key_list[i].get(j).value());

					int location = t_data.key()%temp_size;
					
					if (tmp_key_list[location] == null) {
						tmp_key_list[location]= new LinkedList<Pair>();	
						tmp_key_list[location].add(new Pair(this.key_list[i].get(j).key(), this.key_list[i].get(j).value()) );
					}
					else {
						tmp_key_list[location].add(new Pair(this.key_list[i].get(j).key(), this.key_list[i].get(j).value()) );
					}
				}
			}
		}
		this.key_list=tmp_key_list;
		this.KL_size=temp_size;
	}
}

//Java code to illustrate remove() method
import java.io.*;

public class Test_2 {
 public static void main(String args[])
 {
     // Creating an empty LinkedList
     LinkedList<String> list = new LinkedList<String>();

     // Use add() method to add elements in the list
     list.add("Geeks");
     list.add("for");
     list.add("Geeks");
     list.add("10");
     list.add("20");

     // Output the list
     System.out.println("LinkedList:" + list);

     LinkedList<String> b_list = new LinkedList<String>();
     
     b_list.add("1_Geeks");
     b_list.add("2_for");
     b_list.add("3_Geeks");
     b_list.add("4_10");
     b_list.add("5_20");
     b_list.add("5_Geeks");
     b_list.add("5_for");
     b_list.add("6_Geeks");
     b_list.add("6_10");
     b_list.add("7_20");
     
     list=b_list;
     
     
     System.out.println("LinkedList:" + list);

     
 }
}
